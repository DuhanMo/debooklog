package org.debooklog.debooklogserver.bookshelf.mock

import org.debooklog.debooklogserver.bookshelf.domain.BookShelf
import org.debooklog.debooklogserver.bookshelf.service.port.BookShelfRepository
import java.time.LocalDateTime.now

class FakeBookShelfRepository : BookShelfRepository {
    private var autoGeneratedId: Long = 0
    private val data: MutableList<BookShelf> = mutableListOf()

    override fun save(bookShelf: BookShelf): BookShelf {
        if (bookShelf.id == null || bookShelf.id == 0L) {
            val newBookShelf =
                BookShelf(
                    id = ++autoGeneratedId,
                    memberId = bookShelf.memberId,
                    name = bookShelf.name,
                    createdAt = now(),
                    updatedAt = now(),
                    deletedAt = bookShelf.deletedAt,
                )
            data.add(newBookShelf)
            return bookShelf
        } else {
            data.removeIf { it.id == bookShelf.id }
            data.add(bookShelf)
            return bookShelf
        }
    }

    override fun getById(id: Long): BookShelf {
        return data.first { it.id == id }
    }

    override fun findAll(): List<BookShelf> {
        return data.filter { it.deletedAt == null }
    }
}
